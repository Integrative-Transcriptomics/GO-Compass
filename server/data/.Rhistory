fakedata <- t(fakedata)
fakedata <- rbind(rownames(fakedata),fakedata)
fakedata <- sapply(gos, function(x){
range <- rexp(2,15);
return(runif(conditions,min(range),max(range)))
})
fakedata <- t(fakedata)
fakedata <- cbind(rownames(fakedata),fakedata)
rownames(fakedata) <- NULL
colnames(fakedata) <- c("GoTerm", 1:conditions)
fakedata
write.table(fakedata,"testdata.tsv", sep="\t")
write.table(fakedata,"testdata.tsv", sep="\t", row.names = FALSE)
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
source('~/.active-rstudio-document')
filter
source('~/.active-rstudio-document')
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
table <- read.csv("/Users/harbig/Downloads/pantherGeneList (1).txt")
table <- read.csv("/Users/harbig/Downloads/pantherGeneList (1).txt", row.names = F)
table <- read.table("/Users/harbig/Downloads/pantherGeneList (1).txt", sep="\t")
table <- read.table("/Users/harbig/Downloads/pantherGeneList (1).txt", sep="\t", quote="")
table
head(tabke)
head(table)
table <- table[,c("V1","V6","V7","V8")]
table <- read.table("/Users/harbig/Downloads/pantherGeneList (1).txt", sep="\t", quote="")
table <- table[,c("V1","V6","V7","V8")]
colnames(table) <- c("geneID","MF","BP","CC")
head(table)
sapply(table$MF,function(x) sub(".*GO.{7}","",x))
MF <- sapply(table$MF,function(x) sub(".*GO.{7}","",x))
MF
MF <- sapply(table$MF,function(x) sub(".*GO(.{7})","",x))
MF
MF <- sapply(table$MF,function(x) fsub(".*GO(.{7})","",x))
MF <- sapply(table$MF,function(x) gsub(".*GO(.{7})","",x))
MF
MF <- sapply(table$MF,function(x) gsub(".*(.{9}","",x))
MF <- sapply(table$MF,function(x) gsub( ".*\\((.*)\\).* ",x))
MF <- sapply(table$MF,function(x) gsub( ".*\\((.*)\\).* ","",x))
MF
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
gsub
MF
bla <-"DNA-binding transcription factor activity(GO:0003700);transcription"
blbla <- gsub( ".*\\((.*)\\).* ","",bla)
blbla
blbla <- sub( ".*\\((.*)\\).* ","",bla)
blbla
blbla[1]
blbla[2]
blbla[1]
blbla <- sub( ".*\\((.*)\\).*","",bla)
blbla
blbla <- sub(".*\\((.*)\\).*","",bla)
blbla
blbla <- sub(".*\\(","",bla)
blbla
blbla <- sub(".*\\((.{10}","",bla)
blbla <- sub(".*\\((.({10})","",bla)
blbla <- sub(".*\\((.{10})","",bla)
blbla
blbla
blbla <- sub(".*\\((.*)\\).*","",bla)
blbla#
blbla
MF <- sapply(table$MF,function(x) gsub(".*[\\(]([^.]+)[\\)].*","",x)[1])
MF
blbla <- sub(".*[\\(]([^.]+)[\\)].*","",bla)
blbla
MF <- sapply(table$MF,function(x) gsub(".*[\\(]([^.]+)[)].*","",x)[1])
MF
blbla <- sub(".*[\\(]([^.]+)[)].*","",bla)
blbla
bla
blbla <- sub(".*[\\(]([^.]+)[)].*","",bla)
blbla <- sub(".*\\((.*)).*","",bla)
blbla
blbla <- sub(".*\\((.*).*","",bla)
blbla
blbla <- sub(".*\\(),"",bla)
)
Ã§Ã§Ã¼pasÃ¼f#++
()
))))
()
blbla <- sub(".*\\(,"",bla)
)
blbla <- sub(".*\\((.*)).*","",bla)
bla
blbla
blbla[1]
blbla[2]
blbla <- gsub(".*\\((.*)).*","",bla)
blbla
blbla <- sub(".*\\((.*)).*","",bla)
blbla
blbla <- sub(".*\\(","",bla)
blbla
MF <- sapply(table$MF,function(x) gsub("[\\(\\)]", "", regmatches(j, gregexpr("\\(.*?\\)", j))[[1]]))
MF <- sapply(table$MF,function(x) gsub("[\\(\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]))
MF
table$MF <- sapply(table$MF,function(x) gsub("[\\(\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]))
table
head(tabke)
head(table)
source('~/.active-rstudio-document')
head(table)
source('~/.active-rstudio-document')
MF
unstack(MF)
stack(MF)
head(stack(MF))
rownames(MF)<-table$geneID
names(MF)<-table$geneID
MF
head(stack(MF))
MF <- stack(MF)
table(MF)
data.table(MF)
head(MF)
table(MF$values)
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
table <- read.table("/Users/harbig/Downloads/pantherGeneList (1).txt", sep="\t", quote="")
table <- table[,c("V1","V6","V7","V8")]
colnames(table) <- c("geneID","MF","BP","CC")
MF <- sapply(table$MF,function(x) gsub("[\\(\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]))
BP <- sapply(table$BP,function(x) gsub("[\\(\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]))
CC <- sapply(table$CC,function(x) gsub("[\\(\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]))
names(BP)<-table$geneID
BP <- stack(BP)
BP
GOfrequencies <- prop.table(table(BP))
GOfrequencies
GOfrequencies <- prop.table(table(BP$values))
GOfrequencies
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
source('~/.active-rstudio-document')
BP
GOfrequencies
source('~/.active-rstudio-document')
GOfrequencies
BP <- sapply(table$BP,function(x) gsub("[\\(GO\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]]), perl=TRUE)
BP <- sapply(table$BP,function(x) gsub("[\\(GO\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]], perl=TRUE))
names(BP)<-table$geneID
BP <- stack(BP)
BP
BP <- sapply(table$BP,function(x) paste0("GO",gsub("[\\(GO\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
names(BP)<-table$geneID
BP <- stack(BP)
GOfrequencies <- prop.table(table(BP$values))
GOfrequencies
plumber::plumb(file='SemSimComputation.R')$run()
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
table <- read.table("/Users/harbig/Downloads/pantherGeneList (2).txt", sep="\t", quote="")
table <- read.table("/Users/harbig/Downloads/pantherGeneList (2).txt", sep="\t", quote="")
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
write.table(fakedata,"AureoTestdata.tsv", sep="\t", row.names = FALSE)
source('~/.active-rstudio-document')
source('~/CreateTestData.R')
source('~/CreateTestData.R')
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
traceback()
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
plumber::plumb(file='SemSimComputation.R')$run(port=3001)
table <- read.table("/Users/harbig/Downloads/pantherGeneList (1).txt", sep="\t", quote="")
GOfrequencies["GO:0009405"]
source('~/.active-rstudio-document')
GOfrequencies["GO:0009405"]
GOfrequencies["GO:0006508"]
table$MF["GO:0009405"]
table$BP["GO:0009405"]
BP["GO:0009405"]
BP["GO:0009405",]
BP[,"GO:0009405"]
BP
BP <- sapply(table$BP,function(x) paste0("GO",gsub("[\\(GO\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
BO
BP
BP[,"GO:0009405"]
BP["GO:0009405"]
BP <- sapply(table$BP,function(x) paste0("GO:",gsub("[\\(GO\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
BP
BP <- sapply(table$BP,function(x) paste0("GO:",gsub("[\\(GO:\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
BP
BP <- sapply(table$BP,function(x) paste0("GO:",gsub("[\\(GO:{7}\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
BP
BP["GO:0009405"]
BP["GO:0009405",]
BP["GO:0009405"]
BP <- sapply(table$BP,function(x) paste0("GO:",gsub("[\\(GO:[:digit:]{7}\\)]", "", regmatches(x, gregexpr("\\(.*?\\)", x))[[1]])))
BP
install.packages("string")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
install.packages("stringr")
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t")
geneMap
nrow(geneMap)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
nrow(geneMap)
head(geneMap)
table(geneMap)
geneSets <- geneMap$V2[!duplicated(geneMap$V2)]
geneSets
genesPerSet <- sapply(geneSets,function(x) print(x))
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x])
genesPerSet <- sapply(geneSets,function(x) geneMap[,geneMap$V2 == x])
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x,])
genesPerSet
head(genesPerSet)
genesPerSet <- sapply(geneSets,function(x) unlist(geneMap[geneMap$V2 == x,]))
genesPerSet
genesPerSet <- sapply(geneSets,function(x) unlist(geneMap[geneMap$V2 == x,V1]))
genesPerSet <- sapply(geneSets,function(x) unlist(geneMap[geneMap$V2 == x,1]))
genesPerSet
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x,1])
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x,1])
genesPerSet
unstack(genesPerSet)
stack(genesPerSet)
genesPerSet
cbind(genesPerSet)
rbind(genesPerSet)
gmx <- rbind(genesPerSet)
gmx[1]
gmx[2]
gmx[3]
head(gmx)
geneSets <- geneMap[!duplicated(geneMap$V2)]
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x,1])
genesPerSet
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap$V2[!duplicated(geneMap$V2)]
genesPerSet <- sapply(geneSets,function(x) geneMap[geneMap$V2 == x,1])
gmx <- rbind(genesPerSet)
getwd
getwd()
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- rbind(geneSets$V3,genesPerSet)
head(gmx)
gmx[1]
gmx[]
gmx[2]
gmx[3]
gmx[4]
gmx <- rbind(genesPerSet)
gmx[2]
gmx[1]
gmx[4]
gmx[5]
gmx <-rbind(geneSets$V3,gmx)
gmx[1]
gmx[2]
gmx[3]
gmx[4]
gmx <- do.call(rbind.data.frame,genesPerSet)
gmx
head(gmx)
gmx[1]
gmx[2]
gmx3
gmx[3]
gmx[4]
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- melt(genesPerSet)
gmx
duplicated(gmx$value)
duplicated(gmx$L1)
geneSets
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets <- subset(geneSets,-c(V1))
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets <- subset(geneSets,-c("V1"))
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=',')[V2])
gmx
gmx[1]
gmx[2]
geneSets
head(geneSets)
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets <- subset(geneSets,-c("V1"))
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=',')[V2])
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=',')[V2])
head(gmx)
genesPerSet
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
gmx
getwd()
setwd(".")
getwd()
getwd()
setwd(".")
getwd()
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
write.table(gmx,"saureus.gmx", sep=T, row.names = F)
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
write.table(gmx,"saureus.gmx", sep="\t", row.names = F)
library(reshape2)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmx <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
write.table(gmx,"saureus.gmx", sep="\t", row.names = F, quote=F)
source('~/B04Analysis/Scripts/createGMX.R')
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
geneSets
head(geneSets)
Ontology(geneSets$V2)
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
geneSets <- geneSets[Ontology(geneSets$V2) == "BP",]
geneSets
library(reshape2)
library(GO.db)
filterGOTerms <- function(ontology, geneSets){
geneSets <- geneSets[Ontology(geneSets$V2) == ontology,]
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V2 == x,1])
gmt <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse='\t')[V2])
write.table(gmt,paste0("saureus",ontology,".gmx"), sep="\t", row.names = F, col.names = F, quote=F)
}
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets$V1 <- NULL
filterGOTerms("BP")
filterGOTerms("MF")
filterGOTerms("CC")
source('~/B04Analysis/Scripts/createGMX.R')
getwd()
setwd("/Users/harbig/B04Analysis/KrismerGSEA/")
source('~/B04Analysis/Scripts/createGMX.R')
source('~/B04Analysis/Scripts/createGMX.R')
source('~/B04Analysis/Scripts/createGMX.R')
source('~/B04Analysis/Scripts/createGMX.R')
getwd()
setwd("/Users/harbig/WebstormProjects/go-comparison/server/data/")
source('~/B04Analysis/Scripts/createGMX.R')
getwd()
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V2),]
geneSets
head(geneMap)
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
genesPerSet <- sapply(geneSets$V2,function(x) geneMap[geneMap$V1 == x,1])
genesPerSet
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets
head(geneSets)
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
genesPerSet <- sapply(geneSets$V1,function(x) geneMap[geneMap$V1 == x,1])
genesPerSet
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
genesPerSet <- sapply(geneSets$V1,function(x) geneMap[geneMap$V2 == x,1])
genesPerSet
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
head(geneSets)
head(geneMap)
genesPerSet <- sapply(geneSets$V1,function(x) geneMap[geneMap$V1 == x,2])
genesPerSet
gmt <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=';')[V2])
gmt <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=';')[V1])
gmt
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets$V3 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
genesPerSet <- sapply(geneSets$V1,function(x) geneMap[geneMap$V1 == x,2])
gmt <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=';')[V1])
write.table(gmt,paste0("saureus",".gmt"), sep="\t", row.names = F, col.names = F, quote=F)
library(reshape2)
library(GO.db)
geneMap <- read.table("/Users/harbig/B04Analysis/KrismerGSEA/Staphylococcus_aureus_subsp_aureus_USA300_FPR3757_ASM1346v1_genomic.g2d.GO", sep="\t", quote = "")
geneSets <- geneMap[!duplicated(geneMap$V1),]
geneSets$V2 <- NULL
geneSets <- geneSets[!is.na(geneSets$V1),]
genesPerSet <- sapply(geneSets$V1,function(x) geneMap[geneMap$V1 == x,2])
gmt <- transform(geneSets, Gene_ID=sapply(genesPerSet, paste0, collapse=';')[V1])
gmt$V3 <- NULL
write.table(gmt,paste0("saureus",".gmt"), sep="\t", row.names = F, col.names = F, quote=F)
source('~/.active-rstudio-document')
getwd()
geneMap <- read.table("/Users/harbig/Downloads/Streptomyces_coelicolor_A32_ASM20383v1_genomic.g2d.GO", sep="\t", quote = "")
source('~/.active-rstudio-document')
